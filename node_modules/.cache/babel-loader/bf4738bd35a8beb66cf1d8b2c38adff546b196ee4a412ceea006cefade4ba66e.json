{"ast":null,"code":"var _jsxFileName = \"/Users/hugogranier/git/test/mon-app/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useForm } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [serverError, setServerError] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const onSubmit = async data => {\n    try {\n      await axios.post(\"/api/signup\", data);\n    } catch (error) {\n      setServerError(error.response.data.message);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    //   <div className=\"bg-gray-200 min-h-screen flex items-center justify-center\">\n    //     <form\n    //       onSubmit={handleSubmit(onSubmit)}\n    //       className=\"bg-white p-6 rounded-lg shadow-md\"\n    //     >\n    //       <h1 className=\"text-lg mb-4 font-medium\">Sign Up</h1>\n    //       <div className=\"mb-4\">\n    //         <label className=\"block text-gray-700 font-medium mb-2\">Email</label>\n    //         <input\n    //           name=\"email\"\n    //           ref={register({\n    //             required: \"Email is required\",\n    //             pattern: {\n    //               value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n    //               message: \"Invalid email address\",\n    //             },\n    //           })}\n    //           className={`border border-gray-400 p-2 rounded-lg w-full ${\n    //             errors.email ? \"border-red-500\" : \"\"\n    //           }`}\n    //         />\n    //         {errors.email && (\n    //           <p className=\"text-red-500 text-xs italic\">\n    //             {errors.email.message}\n    //           </p>\n    //         )}\n    //       </div>\n    //       <div className=\"mb-4\">\n    //         <label className=\"block text-gray-700 font-medium mb-2\">\n    //           Password\n    //         </label>\n    //         <input\n    //           type=\"password\"\n    //           name=\"password\"\n    //           ref={register({\n    //             required: \"Password is required\",\n    //             minLength: {\n    //               value: 8,\n    //               message: \"Password must have at least 8 characters\",\n    //             },\n    //           })}\n    //           className={`border border-gray-400 p-2 rounded-lg w-full ${\n    //             errors.password ? \"border-red-500\" : \"\"\n    //           }`}\n    //         />\n    //         {errors.password && (\n    //           <p className=\"text-red-500 text-xs italic\">\n    //             {errors.password.message}\n    //           </p>\n    //         )}\n    //       </div>\n    //       {serverError && (\n    //         <p className=\"text-red-500 text-xs italic mb-4\">{serverError}</p>\n    //       )}\n    //       <button className=\"bg-indigo-500 text-white py-2 px-4 rounded-lg hover:bg-indigo-600\">\n    //         Sign Up\n    //       </button>\n    //     </form>\n    //     test\n    //   </div>\n    _jsxDEV(\"div\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"25rs8rW8X9u+QwrFWHWQ3Kn+JgM=\", false, function () {\n  return [useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useForm","axios","App","serverError","setServerError","register","handleSubmit","errors","onSubmit","data","post","error","response","message"],"sources":["/Users/hugogranier/git/test/mon-app/src/App.jsx"],"sourcesContent":["import React, { useState, useForm } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [serverError, setServerError] = useState(\"\");\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async (data) => {\n    try {\n      await axios.post(\"/api/signup\", data);\n    } catch (error) {\n      setServerError(error.response.data.message);\n    }\n  };\n\n  return (\n    //   <div className=\"bg-gray-200 min-h-screen flex items-center justify-center\">\n    //     <form\n    //       onSubmit={handleSubmit(onSubmit)}\n    //       className=\"bg-white p-6 rounded-lg shadow-md\"\n    //     >\n    //       <h1 className=\"text-lg mb-4 font-medium\">Sign Up</h1>\n    //       <div className=\"mb-4\">\n    //         <label className=\"block text-gray-700 font-medium mb-2\">Email</label>\n    //         <input\n    //           name=\"email\"\n    //           ref={register({\n    //             required: \"Email is required\",\n    //             pattern: {\n    //               value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n    //               message: \"Invalid email address\",\n    //             },\n    //           })}\n    //           className={`border border-gray-400 p-2 rounded-lg w-full ${\n    //             errors.email ? \"border-red-500\" : \"\"\n    //           }`}\n    //         />\n    //         {errors.email && (\n    //           <p className=\"text-red-500 text-xs italic\">\n    //             {errors.email.message}\n    //           </p>\n    //         )}\n    //       </div>\n    //       <div className=\"mb-4\">\n    //         <label className=\"block text-gray-700 font-medium mb-2\">\n    //           Password\n    //         </label>\n    //         <input\n    //           type=\"password\"\n    //           name=\"password\"\n    //           ref={register({\n    //             required: \"Password is required\",\n    //             minLength: {\n    //               value: 8,\n    //               message: \"Password must have at least 8 characters\",\n    //             },\n    //           })}\n    //           className={`border border-gray-400 p-2 rounded-lg w-full ${\n    //             errors.password ? \"border-red-500\" : \"\"\n    //           }`}\n    //         />\n    //         {errors.password && (\n    //           <p className=\"text-red-500 text-xs italic\">\n    //             {errors.password.message}\n    //           </p>\n    //         )}\n    //       </div>\n    //       {serverError && (\n    //         <p className=\"text-red-500 text-xs italic mb-4\">{serverError}</p>\n    //       )}\n    //       <button className=\"bg-indigo-500 text-white py-2 px-4 rounded-lg hover:bg-indigo-600\">\n    //         Sign Up\n    //       </button>\n    //     </form>\n    //     test\n    //   </div>\n    <div>test</div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM;IAAEM,QAAQ;IAAEC,YAAY;IAAEC;EAAO,CAAC,GAAGP,OAAO,EAAE;EAEpD,MAAMQ,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC/B,IAAI;MACF,MAAMR,KAAK,CAACS,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;IACvC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdP,cAAc,CAACO,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACI,OAAO,CAAC;IAC7C;EACF,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAA,UAAK;IAAI;MAAA;MAAA;MAAA;IAAA;EAAM;AAEnB;AAAC,GA3EQX,GAAG;EAAA,QAEiCF,OAAO;AAAA;AAAA,KAF3CE,GAAG;AA6EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}